<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.spring.domain.employee.mapper.EmpMapper">

    <!-- 전직원 정보  -->
    <select id="getAllEmployee" resultType="org.spring.domain.employee.model.EmployeeEntity">
        SELECT * FROM employee
    </select>
    <select id="getDepartment" resultType="org.spring.domain.employee.model.DepartmentEntity">
        select * from department
    </select>
    <select id="getPosition" resultType="org.spring.domain.employee.model.PositionEntity">
        select * from position
    </select>
    <!-- 사원현황판  -->
    <!-- 재직자 인원수 -->
    <select id="countByStatusEmployed" resultType="long">
        SELECT COUNT(*) FROM employee WHERE status = '재직'
    </select>

    <!-- 정규직 인원수 -->
    <select id="countByEmploymentTypeRegular" resultType="long">
        SELECT COUNT(*) FROM employee WHERE employment_type = '정규직'
    </select>

    <!-- 계약직 인원수 -->
    <select id="countByEmploymentTypeContract" resultType="long">
        SELECT COUNT(*) FROM employee WHERE employment_type = '계약직'
    </select>

    <!-- 임시직 인원수 -->
    <select id="countByEmploymentTypeTemporary" resultType="long">
        SELECT COUNT(*) FROM employee WHERE employment_type = '임시직'
    </select>

    <!-- 파견직 인원수 -->
    <select id="countByEmploymentTypeDispatched" resultType="long">
        SELECT COUNT(*) FROM employee WHERE employment_type = '파견직'
    </select>

    <!-- 위촉직 인원수 -->
    <select id="countByEmploymentTypeAppointed" resultType="long">
        SELECT COUNT(*) FROM employee WHERE employment_type = '위촉직'
    </select>

    <!-- 일용직 인원수 -->
    <select id="countByEmploymentTypeDaily" resultType="long">
        SELECT COUNT(*) FROM employee WHERE employment_type = '일용직'
    </select>

    <!-- 퇴사자 인원수 -->
    <select id="countByStatusResigned" resultType="long">
        SELECT COUNT(*) FROM employee WHERE status = '퇴사'
    </select>

    <!-- 전체 인원수 -->
    <select id="countAllEmployees" resultType="long">
        SELECT COUNT(*) FROM employee
    </select>


    <!-- 급여대장 출력  -->
    <!-- 급여정보 연도   -->
    <select id="getYearWage" resultType="org.spring.domain.wage.model.WageEntity">
        SELECT * FROM wage WHERE TO_CHAR(wage_payment_date, 'YYYY') = #{year}
    </select>


    <!-- 사원등록 1페이지 -->
    <!-- Insert employee -->
    <insert id="insertEmployee" parameterType="org.spring.domain.employee.model.EmployeeEntity">
        <selectKey keyProperty="employeeId" resultType="Long" order="BEFORE">
            SELECT employee_seq.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO employee (
        employee_id, employment_type, korean_name, english_name, hire_date, resignation_date, department_id, position_id,
        foreign_or_domestic, resident_number1, resident_number2, address, tel_phone, mobile, email, sns, other_details, status
        ) VALUES (
        #{employeeId}, #{employmentType}, #{koreanName}, #{englishName}, #{hireDate}, #{resignationDate}, #{departmentId}, #{positionId},
        #{foreignOrDomestic}, #{residentNumber1}, #{residentNumber2}, #{address}, #{telPhone}, #{mobile}, #{email}, #{sns}, #{otherDetails}, #{status}
        )
    </insert>


    <!-- Insert dependent -->
    <insert id="insertDependent" parameterType="org.spring.domain.employee.model.DependentsEntity">
        <selectKey keyProperty="dependentId" resultType="Long" order="BEFORE">
            SELECT dependents_seq.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO dependents (
        dependent_id, employee_id, relationship, parents_name, foreign_or_domestic, parents_number1, parents_number2
        ) VALUES (
        #{dependentId}, #{employeeId}, #{relationship}, #{parentsName}, #{foreignOrDomestic}, #{parentsNumber1}, #{parentsNumber2}
        )
    </insert>

<insert id="insertDegree" parameterType="org.spring.domain.employee.model.DegreeEntity">
    INSERT INTO degree (
        degree_id, graduate, admission_date, graduation_date, school_name, major, completion
    ) VALUES (
                 #{degreeId}, #{graduate}, #{admissionDate}, #{graduationDate}, #{schoolName}, #{major}, #{completion}
             )

</insert>
    <!-- Insert career -->
    <insert id="insertCareer" parameterType="org.spring.domain.employee.model.CareerEntity">
        <selectKey keyProperty="careerId" resultType="Long" order="BEFORE">
            SELECT career_seq.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO career (
        career_id, company_name, start_date, end_date, employment_period, final_position, responsibilities, reason_for_resignation
        ) VALUES (
        #{careerId}, #{companyName}, #{startDate}, #{endDate}, #{employmentPeriod}, #{finalPosition}, #{responsibilities}, #{reasonForResignation}
        )
    </insert>

    <!-- Insert military service -->
    <insert id="insertMilitaryService" parameterType="org.spring.domain.employee.model.MilitaryServiceEntity">
        <selectKey keyProperty="militaryServiceId" resultType="Long" order="BEFORE">
            SELECT military_service_seq.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO military_service (
        military_service_id, employee_id, service_type, branch, service_period1, service_period2, final_rank, department, exemption_reason
        ) VALUES (
        #{militaryServiceId}, #{employeeId}, #{serviceType}, #{branch}, #{servicePeriod1}, #{servicePeriod2}, #{finalRank}, #{department}, #{exemptionReason}
        )
    </insert>

    <select id="getNextSeqVal" resultType="long">
        SELECT company_seq.NEXTVAL FROM DUAL
    </select>

    <insert id="insertCompany" parameterType="org.spring.domain.employee.model.CompanyEntity">
        INSERT INTO company_info (
            company_id,
            company_name,
            representative_name,
            business_number,
            corporation_number,
            establishment_date,
            website,
            office_address,
            phone_number,
            fax_number,
            business_type,
            business_item
        ) VALUES (
                     #{companyId},
                     #{companyName},
                     #{representativeName},
                     #{businessNumber},
                     #{corporationNumber},
                     #{establishmentDate},
                     #{website},
                     #{officeAddress},
                     #{phoneNumber},
                     #{faxNumber},
                     #{businessType},
                     #{businessItem}
                 )
    </insert>

    <insert id="insertContact" parameterType="org.spring.domain.employee.model.ContactEntity">
        INSERT INTO contact_person_info (
            person_id,
            company_id,
            contact_name,
            department_Name,
            position_Name,
            con_phone_number,
            mobile_number,
            email
        ) VALUES (
                     #{personId},
                     #{companyId},
                     #{contactName},
                     #{departmentName},
                     #{positionName},
                     #{conPhoneNumber},
                     #{mobileNumber},
                     #{email}
                 )
    </insert>

    <insert id="insertSalaryAccount" parameterType="org.spring.domain.employee.model.EmployeeSalaryAccountEntity">
        INSERT INTO employee_salary_account (
            account_id,
            company_id,
            bank_name,
            account_number,
            deposit_stocks,
            salary_calculation1,
            salary_calculation2,
            salary_payment_date
        ) VALUES (
                     #{accountId},
                     #{companyId},
                     #{bankName},
                     #{accountNumber},
                     #{depositStocks},
                     #{salaryCalculation1},
                     #{salaryCalculation2},
                     #{salaryPaymentDate}
                 )
    </insert>


</mapper>
